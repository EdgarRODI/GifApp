{"version":3,"sources":["componentes/AgregarCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","imagenes","GifExpertApp","categorias","divroot","document","querySelector","ReactDOM","render"],"mappings":"mMAmCeA,EAhCU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAS,IACvBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAeO,OACjCN,EAAS,MAMX,SACE,uBACEO,KAAO,OACPC,MAAUT,EACVU,SAlBc,SAACP,GACnBF,EAASE,EAAEQ,OAAOF,a,+BCRTG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,0FAC2EC,UAAUH,GADrF,sBAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAQ,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARlB,kBAYdM,GAZc,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAClC,OACE,gCACE,qBAAKc,IAAKd,EAAKe,IAAKL,IAClB,4BAAIA,QCFCM,EAAU,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAEvB,ECH0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACTvB,EAAQC,GACLuB,MAAK,SAAAC,GACJC,YAAY,WACVJ,EAAS,CACPd,KAAMiB,EACNL,SAAS,MAEX,UAGL,CAACnB,IAEGoB,EDhB0BM,CAAa1B,GAAlC2B,EAAZ,EAAOpB,KAAeY,EAAtB,EAAsBA,QAEtB,OACE,qCACE,6BAAKnB,IAEHmB,GAAW,wCACb,8BAEIQ,EAASlB,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEWRiB,EAxBM,WAEnB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAkBA,cAAkBA,IACpC,uBAEA,6BAEI4C,EAAWpB,KAAK,SAAAT,GAAS,OACvB,cAAC,EAAD,CAEEA,UAAcA,GADNA,YCbhB8B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OACP,cAAC,EAAD,IACAJ,K","file":"static/js/main.feade773.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AgregarCategoria = ({setCategorias}) => {\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const cambiaInput = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(input.trim().length > 2){\r\n      setCategorias(cats => [input, ...cats]);\r\n      setInput('');\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type = 'text'\r\n        value = { input }\r\n        onChange = { cambiaInput }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAgregarCategoria.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AgregarCategoria;","export const getGifs = async(categoria) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=vqLgkwINMwbhBZu6qlioKwOqoXAFVdpx&q=${ encodeURI(categoria)}&limit=20`;\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n  const gifs = data.map( img => {\r\n      return  {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url\r\n      }\r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n  return (\r\n    <div>\r\n      <img src={url} alt={title} />\r\n        <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n  const {data:imagenes, loading} = useFetchGifs(categoria)\r\n\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n\r\n      { loading && <p>Loading</p> }\r\n      <div>\r\n        {\r\n          imagenes.map( img => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(categoria)\r\n      .then(imgs => {\r\n        setTimeout( () => {\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          });\r\n        },3000)\r\n        \r\n      })\r\n  }, [categoria]);//Solo se llama una vez al dejarlo vacio, al inicio del componente\r\n\r\n  return state; //data: [], loading: false\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport AgregarCategoria from './componentes/AgregarCategoria';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categorias, setCategorias] = useState(['Chivas']);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AgregarCategoria setCategorias = { setCategorias } />\r\n      <hr></hr> \r\n\r\n      <ol>\r\n        {\r\n          categorias.map( categoria => (\r\n            <GifGrid \r\n              key = { categoria }\r\n              categoria = { categoria }\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divroot = document.querySelector('#root');\n\nReactDOM.render(\n  <GifExpertApp />,\n  divroot\n);\n\n"],"sourceRoot":""}